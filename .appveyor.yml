image:
  - Visual Studio 2019
environment:
  PACMAN_OPTIONS: "--needed --noconfirm --noprogressbar --overwrite"
  PACMAN_INSTALL: "openssh rsync"
  matrix:
    - arch: x86
      compiler: msvc2019
      ARCHID: x86
    - arch: x64
      compiler: msvc2019
      ARCHID: x64

branches:
  only:
    - master
    - release

platform:
  - x64


install:
  - cmd: mkdir C:\ninja-build
  - ps: (new-object net.webclient).DownloadFile('https://github.com/mesonbuild/cidata/raw/master/ninja.exe', 'C:\ninja-build\ninja.exe')
  - cmd: if %arch%==x86 (set PYTHON_ROOT=C:\python37) else (set PYTHON_ROOT=C:\python37-x64)
  - cmd: echo Using Python at %PYTHON_ROOT%
  - cmd: set PATH=%cd%;C:\ninja-build;%PYTHON_ROOT%;%PYTHON_ROOT%\Scripts;%PATH%
  - cmd: pip install meson
  - cmd: if %compiler%==msvc2019 ( call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat" %arch% )
  - cmd: echo %APPVEYOR_BUILD_FOLDER%
  
  - ps: $fileContent = "-----BEGIN RSA PRIVATE KEY-----`n"
  - ps: $fileContent += $env:SSH_KEY.Replace(' ', "`n")
  - ps: $fileContent += "`n-----END RSA PRIVATE KEY-----`n"
  - ps: Set-Content $env:APPVEYOR_BUILD_FOLDER\tools\appveyor\id_rsa $fileContent

for:
-
  branches:
    only:
      - release

  build_script:
    - run.py release win
    - run.py pack_7z win
    - C:\msys64\usr\bin\pacman -Sy %PACMAN_OPTIONS% %PACMAN_INSTALL%  
    - C:\msys64\usr\bin\bash --login -c "$(cygpath ${APPVEYOR_BUILD_FOLDER})/tools/appveyor/sfupload.sh $(cygpath ${APPVEYOR_BUILD_FOLDER})"


build_script:
  - run.py debug win
  - run.py pack_7z win
  - C:\msys64\usr\bin\pacman -Sy %PACMAN_OPTIONS% %PACMAN_INSTALL%  
  - C:\msys64\usr\bin\bash --login -c "$(cygpath ${APPVEYOR_BUILD_FOLDER})/tools/appveyor/sfupload.sh $(cygpath ${APPVEYOR_BUILD_FOLDER})"
